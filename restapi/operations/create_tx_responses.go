// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kaz-as/test-transactions/models"
)

// CreateTxOKCode is the HTTP code returned for type CreateTxOK
const CreateTxOKCode int = 200

/*
CreateTxOK new tx initialized

swagger:response createTxOK
*/
type CreateTxOK struct {

	/*
	  In: Body
	*/
	Payload *models.CreateTxSuccess `json:"body,omitempty"`
}

// NewCreateTxOK creates CreateTxOK with default headers values
func NewCreateTxOK() *CreateTxOK {

	return &CreateTxOK{}
}

// WithPayload adds the payload to the create tx o k response
func (o *CreateTxOK) WithPayload(payload *models.CreateTxSuccess) *CreateTxOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create tx o k response
func (o *CreateTxOK) SetPayload(payload *models.CreateTxSuccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTxOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateTxDefault generic error response

swagger:response createTxDefault
*/
type CreateTxDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateTxDefault creates CreateTxDefault with default headers values
func NewCreateTxDefault(code int) *CreateTxDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateTxDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create tx default response
func (o *CreateTxDefault) WithStatusCode(code int) *CreateTxDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create tx default response
func (o *CreateTxDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create tx default response
func (o *CreateTxDefault) WithPayload(payload *models.Error) *CreateTxDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create tx default response
func (o *CreateTxDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTxDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
