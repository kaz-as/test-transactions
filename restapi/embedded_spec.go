// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for transaction processing",
    "title": "Transactions",
    "version": "1.0.0"
  },
  "paths": {
    "/tx": {
      "post": {
        "summary": "create transaction",
        "operationId": "createTx",
        "parameters": [
          {
            "name": "tx",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Tx"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new tx initialized",
            "schema": {
              "$ref": "#/definitions/CreateTxSuccess"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "create user",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user created",
            "schema": {
              "$ref": "#/definitions/CreateUserSuccess"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateTxSuccess": {
      "type": "object",
      "required": [
        "new_balance_from",
        "new_balance_to"
      ],
      "properties": {
        "new_balance_from": {
          "type": "integer",
          "format": "int64"
        },
        "new_balance_to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "required": [
        "balance"
      ],
      "properties": {
        "balance": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateUserSuccess": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "Tx": {
      "type": "object",
      "required": [
        "from",
        "to",
        "value"
      ],
      "properties": {
        "from": {
          "type": "string",
          "pattern": "^[0-9a-f]{32}$"
        },
        "to": {
          "type": "string",
          "pattern": "^[0-9a-f]{32}$"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for transaction processing",
    "title": "Transactions",
    "version": "1.0.0"
  },
  "paths": {
    "/tx": {
      "post": {
        "summary": "create transaction",
        "operationId": "createTx",
        "parameters": [
          {
            "name": "tx",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Tx"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new tx initialized",
            "schema": {
              "$ref": "#/definitions/CreateTxSuccess"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "create user",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user created",
            "schema": {
              "$ref": "#/definitions/CreateUserSuccess"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateTxSuccess": {
      "type": "object",
      "required": [
        "new_balance_from",
        "new_balance_to"
      ],
      "properties": {
        "new_balance_from": {
          "type": "integer",
          "format": "int64"
        },
        "new_balance_to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "required": [
        "balance"
      ],
      "properties": {
        "balance": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateUserSuccess": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "Tx": {
      "type": "object",
      "required": [
        "from",
        "to",
        "value"
      ],
      "properties": {
        "from": {
          "type": "string",
          "pattern": "^[0-9a-f]{32}$"
        },
        "to": {
          "type": "string",
          "pattern": "^[0-9a-f]{32}$"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
}
